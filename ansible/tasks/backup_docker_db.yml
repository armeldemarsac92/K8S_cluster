---
- name: Create backup directory
  file:
    path: "{{ backup_dir }}"
    state: directory
    mode: '0755'

- name: Check if Docker is installed
  command: docker --version
  register: docker_check
  failed_when: docker_check.rc != 0
  changed_when: false

- name: Verify container exists
  command: docker ps -a --format "{{ '{{' }}.Names{{ '}}' }}"
  register: docker_containers
  changed_when: false

- name: Fail if container not found
  fail:
    msg: "Container {{ container_name }} does not exist"
  when: container_name not in docker_containers.stdout_lines

- name: Test PostgreSQL connection
  command: docker exec {{ container_name }} psql -U {{ db_user }} -d {{ db_name }} -c "SELECT 1;"
  register: pg_test
  changed_when: false

- name: Stop active connections
  shell: |
    docker exec {{ container_name }} psql -U {{ db_user }} -d postgres -c "
    SELECT pg_terminate_backend(pid)
    FROM pg_stat_activity
    WHERE datname = '{{ db_name }}' AND pid <> pg_backend_pid();"
  register: terminated
  failed_when: false
  changed_when: false

- name: Create PostgreSQL backup
  shell: |
    docker exec {{ container_name }} pg_dump \
      -U {{ db_user }} \
      --clean \
      --if-exists \
      {{ db_name }} > {{ backup_dir }}/{{ db_name }}_{{ ansible_date_time.epoch }}.sql

- name: Verify backup
  stat:
    path: "{{ backup_dir }}/{{ db_name }}_{{ ansible_date_time.epoch }}.sql"
  register: backup_stat

- name: Fail if backup is empty
  fail:
    msg: "Backup failed - file is empty or too small"
  when: backup_stat.stat.size < 100

- name: Compress backup
  command: gzip {{ backup_dir }}/{{ db_name }}_{{ ansible_date_time.epoch }}.sql
  when: compress_backup | default(true)

- name: Clean old backups (keep last 7 days)
  find:
    paths: "{{ backup_dir }}"
    patterns: "{{ db_name }}_*.sql*"
    age: "7d"
  register: old_backups

- name: Remove old backups
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ old_backups.files }}"
  when: old_backups.files is defined

- name: Display result
  debug:
    msg: 
      - "âœ… Backup successful: {{ db_name }}_{{ ansible_date_time.epoch }}.sql{% if compress_backup|default(true) %}.gz{% endif %}"
      - "Size: {{ backup_stat.stat.size | human_readable }}"
      - "Removed {{ old_backups.files | length | default(0) }} old backup(s)"